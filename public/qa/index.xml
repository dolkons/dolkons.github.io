<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Всё о тестировании ПО и QA on dolkons personal blog</title>
    <link>http://localhost:1313/qa/</link>
    <description>Recent content in Всё о тестировании ПО и QA on dolkons personal blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>dolkons@gmail.com (Kostya Dolgii)</managingEditor>
    <webMaster>dolkons@gmail.com (Kostya Dolgii)</webMaster>
    <lastBuildDate>Sat, 03 Sep 2022 20:23:27 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/qa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data-driven testing в Playwright</title>
      <link>http://localhost:1313/qa/playwright/</link>
      <pubDate>Sat, 03 Sep 2022 20:23:27 +0300</pubDate><author>dolkons@gmail.com (Kostya Dolgii)</author>
      <guid>http://localhost:1313/qa/playwright/</guid>
      <description>К сожалению, инструемент playwright не поддерживает датапровайдеры &amp;ldquo;из коробки&amp;rdquo;, но есть способ элегантно обойти это ограничение.&#xA;Допустим, у нас есть тест, авторизующийся на странице нашего приложения.&#xA;Пример теста&#xA;Предварительная настройка Перед выполнением теста сделаем первоначальную настройку: вначале авторизуемся под каждой ролью и сохраним куки авторизации в json файл Для этого:&#xA;Создаём файлик global-setup.ts&#xA;В конфиге указываем ссылку на файл&#xA;const config: PlaywrightTestConfig = { globalSetup: require.resolve(&#39;./e2e-tests/global-setup&#39;),&#xA;Пишем тест Тест&#xA;Заводим переменную с массивом ссылок на storage-state авторизации</description>
    </item>
    <item>
      <title>Кто такой QA-инженер?</title>
      <link>http://localhost:1313/qa/who-qa-is/</link>
      <pubDate>Sat, 03 Sep 2022 20:23:27 +0300</pubDate><author>dolkons@gmail.com (Kostya Dolgii)</author>
      <guid>http://localhost:1313/qa/who-qa-is/</guid>
      <description>Подходите к тестированию с намерением, что любой, даже самый совершенный программный код всегда содержит в себе ошибки&#xA;Кто же такой этот QA-инженер и чем он отличается от тестировщика ПО? Если мы откроем список открытых IT-вакансий на любой площадке по поиску работы, то с огромной вероятностью вы обнаружите потребность в так называемых QA-инженерах. Иногда названия могут варьироваться, например &amp;ldquo;QA Web&amp;rdquo;, &amp;ldquo;QA Mobile&amp;rdquo;, &amp;ldquo;QA Web Automation engineer&amp;rdquo; и т.д., но суть всегда одна и та же: всегда есть эта загадочная аббревиатура QA.</description>
    </item>
    <item>
      <title>Что такое Data-Driven Testing?</title>
      <link>http://localhost:1313/qa/testing-technics/</link>
      <pubDate>Sat, 03 Sep 2022 20:23:27 +0300</pubDate><author>dolkons@gmail.com (Kostya Dolgii)</author>
      <guid>http://localhost:1313/qa/testing-technics/</guid>
      <description>Что такое Data-driven testing? Это методика тестирования, при которой тест выполняется на разном наборе входных данных, как правило, представленных в виде таблицы значений. При разработке автотестов данный подход реализуется так называемыми &amp;ldquo;датапровайдерами&amp;rdquo; (data-providers).&#xA;Иногда возникает потребность в проверке того, что пользователи, авторизовавшиеся в системе с разными правами имеют доступ к одним и тем же функциям. Допустим, мы имеем интернет-магазин и в системе есть две роли: Администратор и Пользователь. Мы знаем, что и Администратор и Пользователь должны иметь возможность видеть список товаров интернет-магазина и хотим это протестировать.</description>
    </item>
  </channel>
</rss>
